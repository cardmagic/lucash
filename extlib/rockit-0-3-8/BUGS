* multiple_unnamed_maybes reported by Christian Szegedy fails:
  def atest_bug_szegedy_multiple_unnamned_maybes
    p = Parse.generate_parser <<-'EOG'
    Grammar SimpleGrammar
      Tokens
        A       = /a/
        B       = /b/
      Productions
        Expr ->  A? B A?  [Expression: _, val, _]
    EOG

   ast = nil
   assert_no_exception {ast = p.parse "b"}
   assert_no_exception {ast = p.parse "aba"}
  end

* All combinations of nested operators doesn't work fully yet. 
  Needs to be tested and debugged.
  For example liste(ore(/[a-z]+/, '_'), ',') does not return the matched
  tokens in the correct order.

* If you have two different productions and want them to have the same
  AST node name and childrens you're in trouble. One way to get around it is 
  to allow more children names than there are elements in the production. 
  The additional ones get the value nil. Good/Bad?

* atest_bootstrap.rb: test_05 works when run on its own but when any of the
  tests test_01, 02 or 04 is ran at the same time it doesn't work anymore.

  Problem is probably that the first time the productions section is used
  some of the tokens are substituted so that the next time they are not the 
  same? Something along this line but its a nasty one! The string token
  seem to be the problem but I can't see why.

  Effect is that a reduction is missing in the parse table.

* Cannot have the same AST node name as the name of the token or production.

  Example: Expr -> Identifier  [Identifier: ident]

  seems to cause probelsm some time. Not sure why or if its consistent...

Not really bugs but "features"
******************************
* Problems when using names for symbols that are standard Ruby method names. 
  Example: "id"
  Maybe we should warn about this?


