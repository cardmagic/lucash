#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.5
# from Racc grammer file "".
#

require 'racc/parser.rb'
class LucashGrammar < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 59)

require 'lucash/parser'

include Lucash::Parser

def next_token
  @q.shift
end

...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    21,     8,     9,     7,    23,    24,    25,    63,    26,    28,
    13,    27,     3,    42,     6,    47,    23,    24,    25,    27,
     8,     9,     1,     7,     4,    39,    62,     8,     9,    27,
    13,    27,     3,    70,     6,    27,    23,    24,    25,    72,
    26,    28,     1,     7,     4,    27,    75,     8,     9,   nil,
    13,    27,     3,   nil,     6,   nil,    23,    24,    25,   nil,
    26,    28,     1,     7,     4,    17,   nil,     8,     9,   nil,
    13,    27,     3,   nil,     6,    23,    24,    25,   nil,   nil,
   nil,   nil,     1,    73,     4,     7,   nil,     8,     9,   nil,
    27,   nil,    13,    71,     3,   nil,     6,   nil,    23,    24,
    25,   nil,    26,    28,     1,     7,     4,   nil,   nil,     8,
     9,   nil,    13,    27,     3,   nil,     6,   nil,    23,    24,
    25,   nil,    26,    28,     1,     7,     4,   nil,   nil,     8,
     9,   nil,    13,    27,     3,   nil,     6,    69,    23,    24,
    25,   nil,    26,    28,     1,     7,     4,     6,   nil,     8,
     9,   nil,    13,    27,     3,     1,     6,     4,   nil,   nil,
     8,     9,   nil,   nil,     1,    67,     4,     7,   nil,     8,
     9,     6,   nil,   nil,    13,   nil,     3,   nil,     6,     1,
   nil,     4,   nil,   nil,     8,     9,     1,    14,     4,     7,
   nil,     8,     9,     6,   nil,   nil,    13,   nil,     3,   nil,
     6,     1,   nil,     4,   nil,   nil,     8,     9,     1,    38,
     4,     7,   nil,     8,     9,     6,   nil,   nil,    13,   nil,
     3,   nil,     6,     1,   nil,     4,   nil,   nil,     8,     9,
     1,     7,     4,     6,   nil,     8,     9,   nil,    13,   nil,
     3,     1,     6,     4,   nil,   nil,     8,     9,   nil,   nil,
     1,   nil,     4,   nil,    40,     8,     9,     7,    23,    24,
    25,     6,    26,    28,    13,   nil,     3,   nil,     6,     1,
   nil,     4,   nil,    27,     8,     9,     1,     7,     4,     6,
   nil,     8,     9,   nil,    13,   nil,     3,     1,     6,     4,
   nil,   nil,     8,     9,   nil,   nil,     1,     7,     4,     6,
   nil,     8,     9,   nil,    13,   nil,     3,     1,     6,     4,
   nil,   nil,     8,     9,   nil,   nil,     1,     7,     4,   nil,
   nil,     8,     9,   nil,    13,   nil,     3,   nil,     6,    58,
    59,   nil,   nil,   nil,   nil,   nil,     1,     7,     4,     6,
   nil,     8,     9,   nil,    13,   nil,     3,     1,     6,     4,
   nil,   nil,     8,     9,   nil,   nil,     1,     7,     4,     6,
   nil,     8,     9,   nil,    13,    56,     3,     1,     6,     4,
    31,   nil,     8,     9,    34,   nil,     1,   nil,     4,    29,
    30,     8,     9,   nil,    32,    33,   nil,    35,    36,    31,
    65,   nil,   nil,    34,   nil,   nil,   nil,   nil,    29,    30,
     6,   nil,   nil,    32,    33,   nil,    35,    36,     1,     6,
     4,   nil,   nil,     8,     9,   nil,   nil,     1,   nil,     4,
   nil,   nil,     8,     9 ]

racc_action_check = [
    10,     9,     9,    10,    55,    55,    55,    49,    55,    55,
    10,    53,    10,    21,    10,    27,    50,    50,    50,    55,
    27,    27,    10,    13,    10,    16,    48,    10,    10,    45,
    13,    50,    13,    65,    13,    44,    51,    51,    51,    68,
    51,    51,    13,     4,    13,    43,    74,    13,    13,   nil,
     4,    51,     4,   nil,     4,   nil,    54,    54,    54,   nil,
    54,    54,     4,    70,     4,     4,   nil,     4,     4,   nil,
    70,    54,    70,   nil,    70,    46,    46,    46,   nil,   nil,
   nil,   nil,    70,    70,    70,    66,   nil,    70,    70,   nil,
    46,   nil,    66,    66,    66,   nil,    66,   nil,    11,    11,
    11,   nil,    11,    11,    66,     0,    66,   nil,   nil,    66,
    66,   nil,     0,    11,     0,   nil,     0,   nil,    60,    60,
    60,   nil,    60,    60,     0,    64,     0,   nil,   nil,     0,
     0,   nil,    64,    60,    64,   nil,    64,    64,    52,    52,
    52,   nil,    52,    52,    64,    63,    64,    24,   nil,    64,
    64,   nil,    63,    52,    63,    24,    63,    24,   nil,   nil,
    24,    24,   nil,   nil,    63,    63,    63,     1,   nil,    63,
    63,     6,   nil,   nil,     1,   nil,     1,   nil,     1,     6,
   nil,     6,   nil,   nil,     6,     6,     1,     1,     1,    15,
   nil,     1,     1,    25,   nil,   nil,    15,   nil,    15,   nil,
    15,    25,   nil,    25,   nil,   nil,    25,    25,    15,    15,
    15,    62,   nil,    15,    15,    36,   nil,   nil,    62,   nil,
    62,   nil,    62,    36,   nil,    36,   nil,   nil,    36,    36,
    62,    18,    62,    35,   nil,    62,    62,   nil,    18,   nil,
    18,    35,    18,    35,   nil,   nil,    35,    35,   nil,   nil,
    18,   nil,    18,   nil,    18,    18,    18,    19,    19,    19,
    19,    47,    19,    19,    19,   nil,    19,   nil,    19,    47,
   nil,    47,   nil,    19,    47,    47,    19,    59,    19,    34,
   nil,    19,    19,   nil,    59,   nil,    59,    34,    59,    34,
   nil,   nil,    34,    34,   nil,   nil,    59,    22,    59,    33,
   nil,    59,    59,   nil,    22,   nil,    22,    33,    22,    33,
   nil,   nil,    33,    33,   nil,   nil,    22,    41,    22,   nil,
   nil,    22,    22,   nil,    41,   nil,    41,   nil,    41,    41,
    41,   nil,   nil,   nil,   nil,   nil,    41,    40,    41,    32,
   nil,    41,    41,   nil,    40,   nil,    40,    32,    40,    32,
   nil,   nil,    32,    32,   nil,   nil,    40,    37,    40,    28,
   nil,    40,    40,   nil,    37,    37,    37,    28,    37,    28,
    61,   nil,    28,    28,    61,   nil,    37,   nil,    37,    61,
    61,    37,    37,   nil,    61,    61,   nil,    61,    61,    12,
    61,   nil,   nil,    12,   nil,   nil,   nil,   nil,    12,    12,
    23,   nil,   nil,    12,    12,   nil,    12,    12,    23,    26,
    23,   nil,   nil,    23,    23,   nil,   nil,    26,   nil,    26,
   nil,   nil,    26,    26 ]

racc_action_pointer = [
   102,   164,   nil,   nil,    40,   nil,   157,   nil,   nil,   -26,
     0,    94,   386,    20,   nil,   186,     0,   nil,   228,   254,
   nil,    13,   294,   386,   133,   179,   395,    -7,   345,   nil,
   nil,   nil,   325,   285,   265,   219,   201,   354,   nil,   nil,
   334,   314,   nil,    26,    16,    10,    71,   247,    16,   -15,
    12,    32,   134,    -8,    52,     0,   nil,   nil,   nil,   274,
   114,   367,   208,   142,   122,    11,    82,   nil,    16,   nil,
    60,   nil,   nil,   nil,    23,   nil ]

racc_action_default = [
   -41,   -41,   -37,    -4,   -41,   -32,   -41,    -5,   -38,   -39,
   -41,    -3,    -6,   -41,   -36,   -41,   -41,   -31,   -33,   -41,
   -40,   -41,    -1,   -41,   -41,   -41,   -41,   -41,   -41,    -8,
    -9,    -7,   -41,   -41,   -41,   -41,   -41,   -41,   -35,   -30,
   -41,   -41,    76,   -27,   -28,   -29,   -25,   -41,   -15,   -18,
   -26,   -12,   -14,   -13,   -16,   -17,    -2,   -34,   -10,   -41,
   -41,    -6,   -41,   -41,   -41,   -21,   -41,   -19,   -41,   -11,
   -41,   -24,   -20,   -22,   -41,   -23 ]

racc_goto_table = [
    10,    15,    16,    19,    18,    61,    20,    48,   nil,   nil,
   nil,   nil,   nil,    37,   nil,   nil,   nil,   nil,   nil,    41,
    43,    44,    45,    46,    49,    50,   nil,   nil,   nil,    51,
    52,    53,    54,    55,   nil,   nil,   nil,   nil,    57,   nil,
    18,   nil,   nil,   nil,    60,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    64,
   nil,    68,    66,    18,   nil,   nil,   nil,   nil,    74,   nil,
    18 ]

racc_goto_check = [
     1,     1,     6,     2,     1,     3,     5,     4,   nil,   nil,
   nil,   nil,   nil,     1,   nil,   nil,   nil,   nil,   nil,     1,
     2,     2,     2,     2,     5,     2,   nil,   nil,   nil,     2,
     2,     2,     2,     2,   nil,   nil,   nil,   nil,     6,   nil,
     1,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,
   nil,     6,     1,     1,   nil,   nil,   nil,   nil,     6,   nil,
     1 ]

racc_goto_pointer = [
   nil,     0,    -3,   -42,   -20,    -3,    -2,   nil ]

racc_goto_default = [
   nil,    22,    11,    12,   nil,     2,   nil,     5 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 30, :_reduce_1,
  3, 30, :_reduce_2,
  1, 30, :_reduce_3,
  1, 30, :_reduce_4,
  1, 30, :_reduce_5,
  1, 31, :_reduce_6,
  2, 31, :_reduce_7,
  2, 31, :_reduce_8,
  2, 31, :_reduce_9,
  4, 31, :_reduce_10,
  6, 31, :_reduce_11,
  3, 31, :_reduce_12,
  3, 31, :_reduce_13,
  3, 31, :_reduce_14,
  3, 31, :_reduce_15,
  3, 31, :_reduce_16,
  3, 31, :_reduce_17,
  1, 33, :_reduce_18,
  3, 33, :_reduce_19,
  4, 33, :_reduce_20,
  3, 33, :_reduce_21,
  5, 33, :_reduce_22,
  6, 33, :_reduce_23,
  4, 33, :_reduce_24,
  3, 32, :_reduce_25,
  3, 32, :_reduce_26,
  3, 32, :_reduce_27,
  3, 32, :_reduce_28,
  3, 32, :_reduce_29,
  3, 32, :_reduce_30,
  2, 32, :_reduce_31,
  1, 32, :_reduce_32,
  1, 35, :_reduce_33,
  3, 35, :_reduce_34,
  3, 36, :_reduce_35,
  2, 36, :_reduce_36,
  1, 36, :_reduce_37,
  1, 34, :_reduce_38,
  1, 34, :_reduce_39,
  2, 34, :_reduce_40 ]

racc_reduce_n = 41

racc_shift_n = 76

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  ";" => 3,
  "*" => 4,
  "/" => 5,
  "%" => 6,
  "|" => 7,
  "+" => 8,
  "-" => 9,
  "{" => 10,
  "}" => 11,
  "\\n" => 12,
  "&" => 13,
  "if" => 14,
  "end" => 15,
  "else" => 16,
  "&&" => 17,
  "||" => 18,
  "." => 19,
  "=" => 20,
  "<-" => 21,
  "(" => 22,
  ")" => 23,
  "[" => 24,
  "]" => 25,
  "," => 26,
  :NUMBER => 27,
  :IDENT => 28 }

racc_nt_base = 29

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "\";\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"|\"",
  "\"+\"",
  "\"-\"",
  "\"{\"",
  "\"}\"",
  "\"\\\\n\"",
  "\"&\"",
  "\"if\"",
  "\"end\"",
  "\"else\"",
  "\"&&\"",
  "\"||\"",
  "\".\"",
  "\"=\"",
  "\"<-\"",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "\",\"",
  "NUMBER",
  "IDENT",
  "$start",
  "program",
  "line",
  "expr",
  "method_call",
  "atom",
  "basic_result",
  "parens" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 9)
  def _reduce_1(val, _values)
     [:program, val[0][1] + val[1][1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 10)
  def _reduce_2(val, _values)
     [:block, val[1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 11)
  def _reduce_3(val, _values)
     [:program, [val[0]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 12)
  def _reduce_4(val, _values)
     [:program, []] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 13)
  def _reduce_5(val, _values)
     [:program, []] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 15)
  def _reduce_6(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 16)
  def _reduce_7(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 17)
  def _reduce_8(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 18)
  def _reduce_9(val, _values)
     [:background, val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 19)
  def _reduce_10(val, _values)
     [:if, val[1], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 20)
  def _reduce_11(val, _values)
     [:if, val[1], val[2], val[4]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 21)
  def _reduce_12(val, _values)
     [:and, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 22)
  def _reduce_13(val, _values)
     [:pipe, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 23)
  def _reduce_14(val, _values)
     [:or, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 24)
  def _reduce_15(val, _values)
     [:method, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 25)
  def _reduce_16(val, _values)
     [:assignment, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 26)
  def _reduce_17(val, _values)
     [:functional_assignment, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 28)
  def _reduce_18(val, _values)
     [:method_call, val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 29)
  def _reduce_19(val, _values)
     [:method_call, val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 30)
  def _reduce_20(val, _values)
     [:method_call, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 31)
  def _reduce_21(val, _values)
     [:method_call, val[1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 32)
  def _reduce_22(val, _values)
     [:method_call, val[1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 33)
  def _reduce_23(val, _values)
     [:method_call, val[1], val[4]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 34)
  def _reduce_24(val, _values)
     [:yield, val[0], [:block, val[2]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 36)
  def _reduce_25(val, _values)
     [:add, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 37)
  def _reduce_26(val, _values)
     [:subtract, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 38)
  def _reduce_27(val, _values)
     [:multiply, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 39)
  def _reduce_28(val, _values)
     [:divide, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 40)
  def _reduce_29(val, _values)
     [:mod, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 41)
  def _reduce_30(val, _values)
     [:array, val[1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 42)
  def _reduce_31(val, _values)
     [:empty_array] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 43)
  def _reduce_32(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 45)
  def _reduce_33(val, _values)
     [:splat, [val[0]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 46)
  def _reduce_34(val, _values)
     [:splat, [val[0], *val[2][1]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 48)
  def _reduce_35(val, _values)
     val[1] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 49)
  def _reduce_36(val, _values)
     [:empty_parens] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 50)
  def _reduce_37(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 52)
  def _reduce_38(val, _values)
     [:number, val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 53)
  def _reduce_39(val, _values)
     [:value, [val[0]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 54)
  def _reduce_40(val, _values)
     [:value, [val[0], *val[1][1]]] 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class LucashGrammar


