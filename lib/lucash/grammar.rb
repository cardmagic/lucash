#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.5
# from Racc grammer file "".
#

require 'racc/parser.rb'
class LucashGrammar < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 60)

require 'lucash/parser'

include Lucash::Parser

def next_token
  @q.shift
end

...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    18,    34,    37,     7,    69,     8,    26,    27,    19,    35,
    16,     7,     2,    71,     6,     8,    11,    13,    16,    34,
     2,    15,     6,     8,    11,    13,    41,    10,    65,    14,
    64,    15,    46,     7,     8,    10,    40,    14,    60,    15,
    16,   nil,     2,   nil,     6,     8,    11,    13,    14,   nil,
    15,     7,    26,    27,    19,   nil,   nil,    10,    16,    14,
     2,    15,     6,     8,    11,    13,    73,    74,   nil,     7,
    20,    21,    22,    23,   nil,    10,    16,    14,     2,    15,
     6,     8,    11,    13,   nil,   nil,    26,    27,    19,   nil,
   nil,     7,   nil,    10,   nil,    14,   nil,    15,    16,    70,
     2,   nil,     6,     8,    11,    13,    26,    27,    19,    26,
    27,    19,   nil,     7,   nil,    10,   nil,    14,   nil,    15,
    16,    68,     2,   nil,     6,     8,    11,    13,   nil,   nil,
   nil,     7,   nil,   nil,   nil,   nil,   nil,    10,    16,    14,
     2,    15,     6,     8,    11,    13,   nil,   nil,   nil,     7,
    20,    21,    22,    23,    67,    10,    16,    14,     2,    15,
     6,     8,    11,    13,   nil,   nil,    26,    27,    19,   nil,
   nil,   nil,   nil,    10,   nil,    14,   nil,    15,     7,    20,
    21,    22,    23,    24,    25,    16,   nil,     2,   nil,     6,
     8,    11,    13,   nil,   nil,    26,    27,    19,     7,   nil,
   nil,   nil,    10,   nil,    14,    16,    15,     2,   nil,     6,
     8,    11,    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     7,   nil,    10,   nil,    14,    63,    15,    16,     7,     2,
   nil,     6,     8,    11,    13,    16,   nil,     2,   nil,     6,
     8,    11,    13,    44,    10,   nil,    14,   nil,    15,   nil,
     7,   nil,    10,   nil,    14,   nil,    15,    16,     7,     2,
   nil,     6,     8,    11,    13,    16,   nil,     2,   nil,     6,
     8,    11,    13,   nil,    10,   nil,    14,   nil,    15,   nil,
     7,    62,    10,   nil,    14,   nil,    15,    16,     7,     2,
   nil,     6,     8,    11,    13,    16,   nil,     2,   nil,     6,
     8,    11,    13,   nil,    10,   nil,    14,   nil,    15,   nil,
     7,   nil,    10,   nil,    14,   nil,    15,    16,   nil,     2,
    33,     6,     8,    11,    13,    77,   nil,   nil,   nil,    29,
    31,   nil,   nil,   nil,    10,   nil,    14,   nil,    15,   nil,
    28,    30,    32,    20,    21,    22,    23,    24,    25,    20,
    21,    22,    23,    24,    25,   nil,   nil,   nil,   nil,    26,
    27,    19,   nil,   nil,   nil,    26,    27,    19,    20,    21,
    22,    23,    24,    25,    20,    21,    22,    23,    24,    25,
   nil,   nil,   nil,   nil,    26,    27,    19,   nil,   nil,   nil,
    26,    27,    19,    20,    21,    22,    23,    24,    25,    20,
    21,    22,    23,    24,    25,     6,     8,    11,    13,    26,
    27,    19,   nil,   nil,   nil,    26,    27,    19,    10,   nil,
    14,   nil,    15,     6,     8,    11,    13,   nil,     6,     8,
    11,    13,   nil,   nil,   nil,   nil,    10,   nil,    14,   nil,
    15,    10,   nil,    14,   nil,    15,     6,     8,    11,    13,
   nil,     6,     8,    11,    13,   nil,   nil,   nil,   nil,    10,
   nil,    14,   nil,    15,    10,   nil,    14,   nil,    15,     6,
     8,    11,    13,   nil,     6,     8,    11,    13,   nil,   nil,
   nil,   nil,    10,   nil,    14,   nil,    15,    10,   nil,    14,
   nil,    15,     6,     8,    11,    13,   nil,     6,     8,    11,
    13,   nil,   nil,   nil,   nil,    10,   nil,    14,   nil,    15,
    10,   nil,    14,   nil,    15,     6,     8,    11,    13,   nil,
     6,     8,    11,    13,   nil,   nil,   nil,   nil,    10,   nil,
    14,   nil,    15,    10,   nil,    14,   nil,    15,     6,     8,
    11,    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    10,   nil,    14,   nil,    15 ]

racc_action_check = [
     1,    47,     9,     1,    58,     8,    49,    49,    49,     6,
     1,    10,     1,    61,     1,     1,     1,     1,    10,     5,
    10,     8,    10,    10,    10,    10,    11,     1,    41,     1,
    39,     1,    18,    74,    19,    10,    10,    10,    35,    10,
    74,   nil,    74,   nil,    74,    74,    74,    74,    19,   nil,
    19,    66,    51,    51,    51,   nil,   nil,    74,    66,    74,
    66,    74,    66,    66,    66,    66,    66,    66,   nil,    63,
    52,    52,    52,    52,   nil,    66,    63,    66,    63,    66,
    63,    63,    63,    63,   nil,   nil,    52,    52,    52,   nil,
   nil,    59,   nil,    63,   nil,    63,   nil,    63,    59,    59,
    59,   nil,    59,    59,    59,    59,    50,    50,    50,    48,
    48,    48,   nil,    45,   nil,    59,   nil,    59,   nil,    59,
    45,    45,    45,   nil,    45,    45,    45,    45,   nil,   nil,
   nil,    43,   nil,   nil,   nil,   nil,   nil,    45,    43,    45,
    43,    45,    43,    43,    43,    43,   nil,   nil,   nil,     0,
    53,    53,    53,    53,    43,    43,     0,    43,     0,    43,
     0,     0,     0,     0,   nil,   nil,    53,    53,    53,   nil,
   nil,   nil,   nil,     0,   nil,     0,   nil,     0,    42,    42,
    42,    42,    42,    42,    42,    42,   nil,    42,   nil,    42,
    42,    42,    42,   nil,   nil,    42,    42,    42,    38,   nil,
   nil,   nil,    42,   nil,    42,    38,    42,    38,   nil,    38,
    38,    38,    38,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    14,   nil,    38,   nil,    38,    38,    38,    14,    16,    14,
   nil,    14,    14,    14,    14,    16,   nil,    16,   nil,    16,
    16,    16,    16,    14,    14,   nil,    14,   nil,    14,   nil,
    17,   nil,    16,   nil,    16,   nil,    16,    17,    37,    17,
   nil,    17,    17,    17,    17,    37,   nil,    37,   nil,    37,
    37,    37,    37,   nil,    17,   nil,    17,   nil,    17,   nil,
    32,    37,    37,   nil,    37,   nil,    37,    32,    34,    32,
   nil,    32,    32,    32,    32,    34,   nil,    34,   nil,    34,
    34,    34,    34,   nil,    32,   nil,    32,   nil,    32,   nil,
    76,   nil,    34,   nil,    34,   nil,    34,    76,   nil,    76,
     4,    76,    76,    76,    76,    76,   nil,   nil,   nil,     4,
     4,   nil,   nil,   nil,    76,   nil,    76,   nil,    76,   nil,
     4,     4,     4,    56,    56,    56,    56,    56,    56,    55,
    55,    55,    55,    55,    55,   nil,   nil,   nil,   nil,    56,
    56,    56,   nil,   nil,   nil,    55,    55,    55,    57,    57,
    57,    57,    57,    57,    54,    54,    54,    54,    54,    54,
   nil,   nil,   nil,   nil,    57,    57,    57,   nil,   nil,   nil,
    54,    54,    54,    75,    75,    75,    75,    75,    75,     3,
     3,     3,     3,     3,     3,    20,    20,    20,    20,    75,
    75,    75,   nil,   nil,   nil,     3,     3,     3,    20,   nil,
    20,   nil,    20,    23,    23,    23,    23,   nil,    21,    21,
    21,    21,   nil,   nil,   nil,   nil,    23,   nil,    23,   nil,
    23,    21,   nil,    21,   nil,    21,    13,    13,    13,    13,
   nil,    30,    30,    30,    30,   nil,   nil,   nil,   nil,    13,
   nil,    13,   nil,    13,    30,   nil,    30,   nil,    30,    69,
    69,    69,    69,   nil,    28,    28,    28,    28,   nil,   nil,
   nil,   nil,    69,   nil,    69,   nil,    69,    28,   nil,    28,
   nil,    28,    27,    27,    27,    27,   nil,    24,    24,    24,
    24,   nil,   nil,   nil,   nil,    27,   nil,    27,   nil,    27,
    24,   nil,    24,   nil,    24,    26,    26,    26,    26,   nil,
    25,    25,    25,    25,   nil,   nil,   nil,   nil,    26,   nil,
    26,   nil,    26,    25,   nil,    25,   nil,    25,    22,    22,
    22,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    22,   nil,    22,   nil,    22 ]

racc_action_pointer = [
   146,     0,   nil,   395,   317,     9,    -6,   nil,   -10,   -27,
     8,    11,   nil,   432,   217,   nil,   225,   247,    32,    19,
   391,   414,   524,   409,   483,   506,   501,   478,   460,   nil,
   437,   nil,   277,   nil,   285,    24,   nil,   255,   195,     2,
   nil,    12,   175,   128,   nil,   110,   nil,    -9,    89,   -14,
    86,    32,    66,   146,   370,   345,   339,   364,   -22,    88,
   nil,   -13,   nil,    66,   nil,   nil,    48,   nil,   nil,   455,
   nil,   nil,   nil,   nil,    30,   389,   307,   nil ]

racc_action_default = [
   -41,   -41,    -4,    -3,    -6,   -28,   -41,    -5,   -39,   -29,
   -41,   -41,   -37,   -41,   -41,   -38,   -41,    -1,   -41,   -41,
   -41,   -41,   -41,   -41,   -41,   -41,   -41,   -41,   -41,    -8,
   -41,    -9,   -41,    -7,   -41,   -41,   -40,   -41,   -33,   -41,
   -27,   -41,   -41,   -41,   -36,   -41,    78,   -17,   -23,   -24,
   -25,   -15,   -21,   -22,   -14,   -16,   -18,   -19,   -41,   -41,
   -10,   -41,   -30,   -41,   -26,   -11,   -41,   -35,    -2,   -41,
   -32,   -31,   -34,   -12,   -41,   -20,   -41,   -13 ]

racc_goto_table = [
     1,    47,    36,   nil,   nil,   nil,   nil,   nil,    39,   nil,
    38,    42,   nil,   nil,    43,   nil,    45,   nil,    48,    49,
    50,    51,    52,    53,    54,    55,    56,   nil,    57,   nil,
    58,   nil,    38,   nil,    59,    61,   nil,    38,   nil,   nil,
   nil,   nil,    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    72,   nil,    38,   nil,   nil,   nil,    75,   nil,   nil,
   nil,   nil,   nil,   nil,    76 ]

racc_goto_check = [
     1,     4,     7,   nil,   nil,   nil,   nil,   nil,     5,   nil,
     1,     2,   nil,   nil,     1,   nil,     1,   nil,     2,     2,
     2,     2,     2,     2,     2,     2,     2,   nil,     2,   nil,
     5,   nil,     1,   nil,     1,     5,   nil,     1,   nil,   nil,
   nil,   nil,     1,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     5,   nil,     1,   nil,   nil,   nil,     2,   nil,   nil,
   nil,   nil,   nil,   nil,     1 ]

racc_goto_pointer = [
   nil,     0,    -2,   nil,   -18,    -2,   nil,    -6 ]

racc_goto_default = [
   nil,    17,     3,     4,     5,   nil,     9,    12 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 33, :_reduce_1,
  3, 33, :_reduce_2,
  1, 33, :_reduce_3,
  1, 33, :_reduce_4,
  1, 33, :_reduce_5,
  1, 34, :_reduce_6,
  2, 34, :_reduce_7,
  2, 34, :_reduce_8,
  2, 34, :_reduce_9,
  3, 34, :_reduce_10,
  3, 34, :_reduce_11,
  4, 34, :_reduce_12,
  6, 34, :_reduce_13,
  3, 34, :_reduce_14,
  3, 34, :_reduce_15,
  3, 34, :_reduce_16,
  3, 34, :_reduce_17,
  3, 34, :_reduce_18,
  3, 34, :_reduce_19,
  5, 34, :_reduce_20,
  3, 35, :_reduce_21,
  3, 35, :_reduce_22,
  3, 35, :_reduce_23,
  3, 35, :_reduce_24,
  3, 35, :_reduce_25,
  3, 35, :_reduce_26,
  2, 35, :_reduce_27,
  1, 35, :_reduce_28,
  1, 36, :_reduce_29,
  3, 36, :_reduce_30,
  4, 36, :_reduce_31,
  4, 36, :_reduce_32,
  1, 37, :_reduce_33,
  3, 37, :_reduce_34,
  3, 38, :_reduce_35,
  2, 38, :_reduce_36,
  1, 38, :_reduce_37,
  1, 39, :_reduce_38,
  1, 39, :_reduce_39,
  2, 39, :_reduce_40 ]

racc_reduce_n = 41

racc_shift_n = 78

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  ";" => 3,
  "*" => 4,
  "/" => 5,
  "%" => 6,
  "|" => 7,
  "+" => 8,
  "-" => 9,
  "{" => 10,
  "}" => 11,
  "\\n" => 12,
  "&" => 13,
  "\"" => 14,
  :IDENT => 15,
  "'" => 16,
  "if" => 17,
  "end" => 18,
  "else" => 19,
  "&&" => 20,
  "||" => 21,
  "." => 22,
  "=" => 23,
  "<-" => 24,
  "<-(" => 25,
  ")" => 26,
  "[" => 27,
  "]" => 28,
  "(" => 29,
  "," => 30,
  :NUMBER => 31 }

racc_nt_base = 32

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "\";\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"|\"",
  "\"+\"",
  "\"-\"",
  "\"{\"",
  "\"}\"",
  "\"\\\\n\"",
  "\"&\"",
  "\"\\\"\"",
  "IDENT",
  "\"'\"",
  "\"if\"",
  "\"end\"",
  "\"else\"",
  "\"&&\"",
  "\"||\"",
  "\".\"",
  "\"=\"",
  "\"<-\"",
  "\"<-(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "\"(\"",
  "\",\"",
  "NUMBER",
  "$start",
  "program",
  "line",
  "expr",
  "method_call",
  "splat",
  "parens",
  "atom" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 10)
  def _reduce_1(val, _values)
     [:program, val[0][1] + val[1][1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 11)
  def _reduce_2(val, _values)
     val[1] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 12)
  def _reduce_3(val, _values)
     [:program, [val[0]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 13)
  def _reduce_4(val, _values)
     [:program, []] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 14)
  def _reduce_5(val, _values)
     [:program, []] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 16)
  def _reduce_6(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 17)
  def _reduce_7(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 18)
  def _reduce_8(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 19)
  def _reduce_9(val, _values)
     [:background, val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 20)
  def _reduce_10(val, _values)
     [:embedded_string, val[1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 21)
  def _reduce_11(val, _values)
     [:string, val[1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 22)
  def _reduce_12(val, _values)
     [:if, val[1], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 23)
  def _reduce_13(val, _values)
     [:if, val[1], val[2], val[4]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 24)
  def _reduce_14(val, _values)
     [:and, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 25)
  def _reduce_15(val, _values)
     [:pipe, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 26)
  def _reduce_16(val, _values)
     [:or, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 27)
  def _reduce_17(val, _values)
     [:method, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 28)
  def _reduce_18(val, _values)
     [:assignment, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 29)
  def _reduce_19(val, _values)
     [:functional_assignment, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 30)
  def _reduce_20(val, _values)
     [:functional_assignment, val[0], val[2], val[4]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 32)
  def _reduce_21(val, _values)
     [:add, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 33)
  def _reduce_22(val, _values)
     [:subtract, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 34)
  def _reduce_23(val, _values)
     [:multiply, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 35)
  def _reduce_24(val, _values)
     [:divide, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 36)
  def _reduce_25(val, _values)
     [:mod, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 37)
  def _reduce_26(val, _values)
     [:array, val[1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 38)
  def _reduce_27(val, _values)
     [:empty_array] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 39)
  def _reduce_28(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 41)
  def _reduce_29(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 42)
  def _reduce_30(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 43)
  def _reduce_31(val, _values)
     [:args, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 44)
  def _reduce_32(val, _values)
     [:yield, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 46)
  def _reduce_33(val, _values)
     [:splat, [val[0]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 47)
  def _reduce_34(val, _values)
     [:splat, [val[0], *val[2][1]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 49)
  def _reduce_35(val, _values)
     val[1] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 50)
  def _reduce_36(val, _values)
     [:empty_parens] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 51)
  def _reduce_37(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 53)
  def _reduce_38(val, _values)
     [:number, val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 54)
  def _reduce_39(val, _values)
     [:value, val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 55)
  def _reduce_40(val, _values)
     [:value, val[0], *val[1][1]] 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class LucashGrammar


