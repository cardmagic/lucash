#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.5
# from Racc grammer file "".
#

require 'racc/parser.rb'
class LucashGrammar < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 56)

require 'lucash/parser'

include Lucash::Parser

def next_token
  @q.shift
end

...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    20,     6,     8,     5,    58,    27,    22,    23,    24,     5,
    12,    47,     3,     4,    61,     7,    12,    36,     3,     4,
    64,     7,    27,     2,     6,     8,     6,     8,     5,     2,
    27,    27,     6,     8,     5,    12,    68,     3,     4,    72,
     7,    12,    70,     3,     4,    69,     7,    27,     2,    40,
    73,     6,     8,     5,     2,   nil,   nil,     6,     8,   nil,
    12,   nil,     3,     4,   nil,     7,    67,   nil,    22,    23,
    24,     5,   nil,     2,     7,   nil,     6,     8,    12,   nil,
     3,     4,     2,     7,    27,     6,     8,   nil,   nil,     5,
   nil,     2,     7,   nil,     6,     8,    12,   nil,     3,     4,
     2,     7,   nil,     6,     8,   nil,   nil,     5,   nil,     2,
     7,   nil,     6,     8,    12,   nil,     3,     4,     2,     7,
   nil,     6,     8,   nil,   nil,     5,   nil,     2,    14,   nil,
     6,     8,    12,   nil,     3,     4,   nil,     7,   nil,   nil,
   nil,   nil,   nil,     5,   nil,     2,     7,   nil,     6,     8,
    12,   nil,     3,     4,     2,     7,   nil,     6,     8,   nil,
   nil,     5,   nil,     2,     7,   nil,     6,     8,    12,   nil,
     3,     4,     2,     7,   nil,     6,     8,   nil,   nil,     5,
   nil,     2,   nil,    37,     6,     8,    12,   nil,     3,     4,
   nil,     7,    56,    57,   nil,   nil,    22,    23,    24,     2,
    25,    26,     6,     8,     5,    22,    23,    24,   nil,    25,
    26,    12,    27,     3,     4,   nil,     7,   nil,   nil,   nil,
   nil,    27,     5,   nil,     2,     7,   nil,     6,     8,    12,
   nil,     3,     4,     2,     7,   nil,     6,     8,   nil,   nil,
     5,   nil,     2,     7,   nil,     6,     8,    12,   nil,     3,
     4,     2,     7,   nil,     6,     8,   nil,   nil,     5,   nil,
     2,     7,   nil,     6,     8,    12,    54,     3,     4,     2,
     7,    30,     6,     8,   nil,    31,   nil,   nil,     2,   nil,
    29,     6,     8,   nil,    30,   nil,    32,    33,    31,    34,
    28,   nil,   nil,    29,   nil,    65,   nil,   nil,   nil,    32,
    33,   nil,    34,    28,    22,    23,    24,   nil,    25,    26,
   nil,    22,    23,    24,   nil,    25,    26,   nil,   nil,   nil,
    27,    38,   nil,   nil,    22,    23,    24,    27,    25,    26,
    22,    23,    24,   nil,    25,    26,   nil,    22,    23,    24,
    27,    25,    26,    22,    23,    24,    27,    25,    26,    16,
     7,   nil,     7,    27,   nil,   nil,   nil,     7,     2,    27,
     2,     6,     8,     6,     8,     2,     7,   nil,     6,     8,
   nil,     7,   nil,   nil,     2,   nil,   nil,     6,     8,     2,
   nil,   nil,     6,     8 ]

racc_action_check = [
     9,     8,     8,     9,    46,    50,    44,    44,    44,    58,
     9,    27,     9,     9,    48,     9,    58,    13,    58,    58,
    58,    58,    44,     9,    27,    27,     9,     9,    69,    58,
    43,    42,    58,    58,    66,    69,    63,    69,    69,    69,
    69,    66,    66,    66,    66,    65,    66,    41,    69,    20,
    71,    69,    69,    62,    66,   nil,   nil,    66,    66,   nil,
    62,   nil,    62,    62,   nil,    62,    62,   nil,    45,    45,
    45,     0,   nil,    62,     7,   nil,    62,    62,     0,   nil,
     0,     0,     7,     0,    45,     7,     7,   nil,   nil,    61,
   nil,     0,    23,   nil,     0,     0,    61,   nil,    61,    61,
    23,    61,   nil,    23,    23,   nil,   nil,     2,   nil,    61,
    22,   nil,    61,    61,     2,   nil,     2,     2,    22,     2,
   nil,    22,    22,   nil,   nil,    12,   nil,     2,     2,   nil,
     2,     2,    12,   nil,    12,    12,   nil,    12,   nil,   nil,
   nil,   nil,   nil,    57,   nil,    12,    34,   nil,    12,    12,
    57,   nil,    57,    57,    34,    57,   nil,    34,    34,   nil,
   nil,    15,   nil,    57,    33,   nil,    57,    57,    15,   nil,
    15,    15,    33,    15,   nil,    33,    33,   nil,   nil,    39,
   nil,    15,   nil,    15,    15,    15,    39,   nil,    39,    39,
   nil,    39,    39,    39,   nil,   nil,    59,    59,    59,    39,
    59,    59,    39,    39,    18,    18,    18,    18,   nil,    18,
    18,    18,    59,    18,    18,   nil,    18,   nil,   nil,   nil,
   nil,    18,    37,   nil,    18,    32,   nil,    18,    18,    37,
   nil,    37,    37,    32,    37,   nil,    32,    32,   nil,   nil,
    21,   nil,    37,    47,   nil,    37,    37,    21,   nil,    21,
    21,    47,    21,   nil,    47,    47,   nil,   nil,    35,   nil,
    21,    24,   nil,    21,    21,    35,    35,    35,    35,    24,
    35,    11,    24,    24,   nil,    11,   nil,   nil,    35,   nil,
    11,    35,    35,   nil,    60,   nil,    11,    11,    60,    11,
    11,   nil,   nil,    60,   nil,    60,   nil,   nil,   nil,    60,
    60,   nil,    60,    60,    53,    53,    53,   nil,    53,    53,
   nil,    17,    17,    17,   nil,    17,    17,   nil,   nil,   nil,
    53,    17,   nil,   nil,    49,    49,    49,    17,    49,    49,
    51,    51,    51,   nil,    51,    51,   nil,    52,    52,    52,
    49,    52,    52,    10,    10,    10,    51,    10,    10,     4,
     4,   nil,    28,    52,   nil,   nil,   nil,    26,     4,    10,
    28,     4,     4,    28,    28,    26,    25,   nil,    26,    26,
   nil,    31,   nil,   nil,    25,   nil,   nil,    25,    25,    31,
   nil,   nil,    31,    31 ]

racc_action_pointer = [
    68,   nil,   104,   nil,   335,   nil,   nil,    59,   -25,     0,
   339,   268,   122,    -7,   nil,   158,   nil,   307,   201,   nil,
    49,   237,    95,    77,   246,   351,   342,    -2,   337,   nil,
   nil,   356,   210,   149,   131,   255,   nil,   219,   nil,   176,
   nil,    27,    11,    10,     2,    64,    -9,   228,     4,   320,
   -15,   326,   333,   300,   nil,   nil,   nil,   140,     6,   192,
   281,    86,    50,    22,   nil,    32,    31,   nil,   nil,    25,
   nil,    36,   nil,   nil ]

racc_action_default = [
   -39,   -33,   -39,    -4,   -39,    -5,   -36,   -39,   -37,   -39,
    -3,    -8,   -39,   -39,   -32,   -34,    -7,   -39,   -39,   -38,
   -39,    -1,   -39,   -39,   -39,   -39,   -39,   -39,   -39,   -10,
    -9,   -39,   -39,   -39,   -39,   -39,   -31,   -39,    -6,   -39,
    74,   -28,   -29,   -30,   -26,   -27,   -19,   -39,   -16,   -18,
   -14,   -13,   -15,   -17,    -2,   -35,   -11,   -39,   -39,   -39,
    -8,   -39,   -39,   -39,   -20,   -22,   -39,   -12,   -21,   -39,
   -25,   -39,   -23,   -24 ]

racc_goto_table = [
     9,    17,    15,    13,    18,    19,    60,    48,   nil,   nil,
   nil,   nil,    35,   nil,   nil,   nil,   nil,   nil,    39,    41,
    42,    43,    44,    45,    46,    49,   nil,   nil,    50,    51,
    52,    53,   nil,   nil,   nil,   nil,   nil,    15,    55,   nil,
   nil,   nil,   nil,   nil,    59,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    62,    15,    63,
   nil,    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,
    71 ]

racc_goto_check = [
     1,     2,     1,     6,     2,     5,     3,     4,   nil,   nil,
   nil,   nil,     1,   nil,   nil,   nil,   nil,   nil,     1,     2,
     2,     2,     2,     2,     5,     2,   nil,   nil,     2,     2,
     2,     2,   nil,   nil,   nil,   nil,   nil,     1,     6,   nil,
   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,     1,     6,
   nil,     1,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,
     6 ]

racc_goto_pointer = [
   nil,     0,    -3,   -41,   -20,    -3,     1 ]

racc_goto_default = [
   nil,    21,    10,    11,   nil,     1,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 29, :_reduce_1,
  3, 29, :_reduce_2,
  1, 29, :_reduce_3,
  1, 29, :_reduce_4,
  1, 29, :_reduce_5,
  3, 29, :_reduce_6,
  2, 29, :_reduce_7,
  1, 30, :_reduce_8,
  2, 30, :_reduce_9,
  2, 30, :_reduce_10,
  4, 30, :_reduce_11,
  6, 30, :_reduce_12,
  3, 30, :_reduce_13,
  3, 30, :_reduce_14,
  3, 30, :_reduce_15,
  3, 30, :_reduce_16,
  3, 30, :_reduce_17,
  3, 30, :_reduce_18,
  1, 32, :_reduce_19,
  3, 32, :_reduce_20,
  4, 32, :_reduce_21,
  3, 32, :_reduce_22,
  5, 32, :_reduce_23,
  6, 32, :_reduce_24,
  4, 32, :_reduce_25,
  3, 31, :_reduce_26,
  3, 31, :_reduce_27,
  3, 31, :_reduce_28,
  3, 31, :_reduce_29,
  3, 31, :_reduce_30,
  3, 31, :_reduce_31,
  2, 31, :_reduce_32,
  1, 31, :_reduce_33,
  1, 34, :_reduce_34,
  3, 34, :_reduce_35,
  1, 33, :_reduce_36,
  1, 33, :_reduce_37,
  2, 33, :_reduce_38 ]

racc_reduce_n = 39

racc_shift_n = 74

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  ";" => 3,
  "*" => 4,
  "/" => 5,
  "%" => 6,
  "|" => 7,
  "+" => 8,
  "-" => 9,
  "{" => 10,
  "}" => 11,
  "\\n" => 12,
  "(" => 13,
  ")" => 14,
  "if" => 15,
  "end" => 16,
  "else" => 17,
  "&&" => 18,
  "||" => 19,
  "." => 20,
  "=" => 21,
  "<-" => 22,
  "[" => 23,
  "]" => 24,
  "," => 25,
  :NUMBER => 26,
  :IDENT => 27 }

racc_nt_base = 28

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "\";\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"|\"",
  "\"+\"",
  "\"-\"",
  "\"{\"",
  "\"}\"",
  "\"\\\\n\"",
  "\"(\"",
  "\")\"",
  "\"if\"",
  "\"end\"",
  "\"else\"",
  "\"&&\"",
  "\"||\"",
  "\".\"",
  "\"=\"",
  "\"<-\"",
  "\"[\"",
  "\"]\"",
  "\",\"",
  "NUMBER",
  "IDENT",
  "$start",
  "program",
  "line",
  "expr",
  "method_call",
  "atom",
  "basic_result" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 9)
  def _reduce_1(val, _values)
     [:program, val[0][1] + val[1][1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 10)
  def _reduce_2(val, _values)
     [:block, val[1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 11)
  def _reduce_3(val, _values)
     [:program, [val[0]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 12)
  def _reduce_4(val, _values)
     [:program, []] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 13)
  def _reduce_5(val, _values)
     [:program, []] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 14)
  def _reduce_6(val, _values)
     val[1] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 15)
  def _reduce_7(val, _values)
     [:empty_parens] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 17)
  def _reduce_8(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 18)
  def _reduce_9(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 19)
  def _reduce_10(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 20)
  def _reduce_11(val, _values)
     [:if, val[1], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 21)
  def _reduce_12(val, _values)
     [:if, val[1], val[2], val[4]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 22)
  def _reduce_13(val, _values)
     [:and, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 23)
  def _reduce_14(val, _values)
     [:pipe, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 24)
  def _reduce_15(val, _values)
     [:or, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 25)
  def _reduce_16(val, _values)
     [:method, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 26)
  def _reduce_17(val, _values)
     [:assignment, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 27)
  def _reduce_18(val, _values)
     [:functional_assignment, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 29)
  def _reduce_19(val, _values)
     [:method_call, val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 30)
  def _reduce_20(val, _values)
     [:method_call, val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 31)
  def _reduce_21(val, _values)
     [:method_call, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 32)
  def _reduce_22(val, _values)
     [:method_call, val[1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 33)
  def _reduce_23(val, _values)
     [:method_call, val[1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 34)
  def _reduce_24(val, _values)
     [:method_call, val[1], val[4]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 35)
  def _reduce_25(val, _values)
     [:yield, val[0], [:block, val[2]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 37)
  def _reduce_26(val, _values)
     [:add, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 38)
  def _reduce_27(val, _values)
     [:subtract, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 39)
  def _reduce_28(val, _values)
     [:multiply, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 40)
  def _reduce_29(val, _values)
     [:divide, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 41)
  def _reduce_30(val, _values)
     [:mod, val[0], val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 42)
  def _reduce_31(val, _values)
     [:array, val[1]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 43)
  def _reduce_32(val, _values)
     [:empty_array] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 44)
  def _reduce_33(val, _values)
     val[0] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 46)
  def _reduce_34(val, _values)
     [:splat, [val[0]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 47)
  def _reduce_35(val, _values)
     [:splat, [val[0], *val[2][1]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 49)
  def _reduce_36(val, _values)
     [:number, val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 50)
  def _reduce_37(val, _values)
     [:value, [val[0]]] 
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 51)
  def _reduce_38(val, _values)
     [:value, [val[0], *val[1][1]]] 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class LucashGrammar


